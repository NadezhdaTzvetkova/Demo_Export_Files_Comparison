name: CI Workflow for Demo_Export_Files_Comparison

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: ‚ú® Checkout Repository
        uses: actions/checkout@v4

      - name: ‚ö° Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: üìù Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install behave pytest pytest-xdist coverage allure-behave allure-python-commons allure-commandline

      - name: üî¢ Run Behave Tests & Collect Allure Results
        run: |
          mkdir -p allure-results/behave
          behave -f allure_behave.formatter:AllureFormatter -o allure-results/behave ./features

      - name: üî¢ Run Pytest Tests in Parallel & Collect Allure Results
        run: |
          mkdir -p allure-results/pytest
          pytest -n auto --alluredir=allure-results/pytest || true

      - name: ‚öñÔ∏è Generate Combined Coverage Report
        run: |
          coverage run -m behave || true
          coverage run -m pytest || true
          coverage combine
          coverage xml

      - name: üí° Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
        continue-on-error: true

      - name: üß™ Generate Combined Allure HTML Report
        run: |
          allure generate allure-results/behave allure-results/pytest --clean -o allure-report

      - name: üöÄ Upload Allure HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-html
          path: allure-report

      - name: üö® Slack Notification on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#FF0000'
          SLACK_MESSAGE: 'üö® CI Failed for `${{ github.repository }}` @ `${{ github.sha }}`'

      - name: ‚úÖ Slack Notification on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#00FF00'
          SLACK_MESSAGE: '‚úÖ CI Passed for `${{ github.repository }}` @ `${{ github.sha }}`'
