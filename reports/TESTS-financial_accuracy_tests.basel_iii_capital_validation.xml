<testsuite name="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" tests="14" errors="0" failures="0" skipped="0" time="0.0" timestamp="2025-03-20T10:51:23.151966" hostname="Mac.localstaff"><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Validate Basel III capital adequacy reports -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @financial_compliance
  Scenario Outline: Validate Basel III capital adequacy reports -- @1.1 
    Given a bank export file "bank_export_basel_iii_report.csv" ... untested in 0.000s
    When I check the "Tier 1 Capital", "Risk-Weighted Assets", and "Capital Ratio" fields in "N/A" ... undefined in 0.000s
    Then all values should match the Basel III calculation formula "(Tier1 Capital / RWA)" ... undefined in 0.000s
    And reports failing to meet "8%" should be flagged for regulatory review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Validate Basel III capital adequacy reports -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @financial_compliance
  Scenario Outline: Validate Basel III capital adequacy reports -- @1.2 
    Given a bank export file "bank_export_liquidity_ratios.xlsx" ... untested in 0.000s
    When I check the "Tier 1 Capital", "Risk-Weighted Assets", and "Capital Ratio" fields in "Sheet1" ... undefined in 0.000s
    Then all values should match the Basel III calculation formula "LCR = HQLA / Net Outflow" ... undefined in 0.000s
    And reports failing to meet "100%" should be flagged for regulatory review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Ensure stress testing calculations adhere to Basel III requirements -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @stress_testing @edge_case
  Scenario Outline: Ensure stress testing calculations adhere to Basel III requirements -- @1.1 
    Given a bank export file "bank_export_basel_iii_stress.csv" ... untested in 0.000s
    When I apply stress testing scenarios using "Adverse Macro Scenario" ... undefined in 0.000s
    Then capital adequacy should remain above "5%" ... undefined in 0.000s
    And deviations beyond the threshold should be flagged for regulatory audit ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Ensure stress testing calculations adhere to Basel III requirements -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @stress_testing @edge_case
  Scenario Outline: Ensure stress testing calculations adhere to Basel III requirements -- @1.2 
    Given a bank export file "bank_export_basel_iii_stress.xlsx" ... untested in 0.000s
    When I apply stress testing scenarios using "Severe Recession" ... undefined in 0.000s
    Then capital adequacy should remain above "6%" ... undefined in 0.000s
    And deviations beyond the threshold should be flagged for regulatory audit ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Validate risk-weighted asset (RWA) calculations -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @risk_weighting @data_integrity
  Scenario Outline: Validate risk-weighted asset (RWA) calculations -- @1.1 
    Given a bank export file "bank_export_rwa_validation.csv" ... untested in 0.000s
    When I check the "Risk-Weighted Assets" column in "N/A" ... undefined in 0.000s
    Then all RWA values should be computed correctly using "Sum(Exposure Amount * Risk Weight)" ... undefined in 0.000s
    And inconsistencies should be flagged for regulatory review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Validate risk-weighted asset (RWA) calculations -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @risk_weighting @data_integrity
  Scenario Outline: Validate risk-weighted asset (RWA) calculations -- @1.2 
    Given a bank export file "bank_export_rwa_validation.xlsx" ... untested in 0.000s
    When I check the "Risk-Weighted Assets" column in "Sheet1" ... undefined in 0.000s
    Then all RWA values should be computed correctly using "Exposure * Regulatory Factor" ... undefined in 0.000s
    And inconsistencies should be flagged for regulatory review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Validate Basel III liquidity coverage ratio (LCR) compliance -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @liquidity_ratios @financial_stability
  Scenario Outline: Validate Basel III liquidity coverage ratio (LCR) compliance -- @1.1 
    Given a bank export file "bank_export_liquidity_ratios.csv" ... untested in 0.000s
    When I check the "High-Quality Liquid Assets" and "Net Cash Outflows" in "N/A" ... undefined in 0.000s
    Then the liquidity coverage ratio should be calculated as "LCR = HQLA / Net Outflow" ... undefined in 0.000s
    And reports with LCR below "100%" should be flagged for liquidity risk ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Validate Basel III liquidity coverage ratio (LCR) compliance -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @liquidity_ratios @financial_stability
  Scenario Outline: Validate Basel III liquidity coverage ratio (LCR) compliance -- @1.2 
    Given a bank export file "bank_export_liquidity_ratios.xlsx" ... untested in 0.000s
    When I check the "High-Quality Liquid Assets" and "Net Cash Outflows" in "Sheet1" ... undefined in 0.000s
    Then the liquidity coverage ratio should be calculated as "HQLA / Stress Outflow" ... undefined in 0.000s
    And reports with LCR below "90%" should be flagged for liquidity risk ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Ensure Net Stable Funding Ratio (NSFR) meets Basel III standards -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @net_stable_funding_ratio @long_term_liquidity
  Scenario Outline: Ensure Net Stable Funding Ratio (NSFR) meets Basel III standards -- @1.1 
    Given a bank export file "bank_export_nsfr_test.csv" ... untested in 0.000s
    When I check the "Available Stable Funding" and "Required Stable Funding" in "N/A" ... undefined in 0.000s
    Then the NSFR should be calculated as "Available Stable Funding / Required Stable Funding" ... undefined in 0.000s
    And reports with NSFR below "100%" should be flagged for stability risks ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Ensure Net Stable Funding Ratio (NSFR) meets Basel III standards -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @net_stable_funding_ratio @long_term_liquidity
  Scenario Outline: Ensure Net Stable Funding Ratio (NSFR) meets Basel III standards -- @1.2 
    Given a bank export file "bank_export_nsfr_test.xlsx" ... untested in 0.000s
    When I check the "Available Stable Funding" and "Required Stable Funding" in "Sheet1" ... undefined in 0.000s
    Then the NSFR should be calculated as "ASF / RSF" ... undefined in 0.000s
    And reports with NSFR below "90%" should be flagged for stability risks ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Verify the composition of Tier 1 vs. Tier 2 capital -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @tier_1_vs_tier_2 @capital_structure
  Scenario Outline: Verify the composition of Tier 1 vs. Tier 2 capital -- @1.1 
    Given a bank export file "bank_export_capital_structure.csv" ... untested in 0.000s
    When I compare "Tier 1 Capital" and "Tier 2 Capital" values in "N/A" ... undefined in 0.000s
    Then the proportion of Tier 1 capital should meet the required "75%" ... undefined in 0.000s
    And Tier 2 capital should not exceed "25%" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Verify the composition of Tier 1 vs. Tier 2 capital -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @tier_1_vs_tier_2 @capital_structure
  Scenario Outline: Verify the composition of Tier 1 vs. Tier 2 capital -- @1.2 
    Given a bank export file "bank_export_capital_structure.xlsx" ... untested in 0.000s
    When I compare "Tier 1 Capital" and "Tier 2 Capital" values in "Sheet1" ... undefined in 0.000s
    Then the proportion of Tier 1 capital should meet the required "80%" ... undefined in 0.000s
    And Tier 2 capital should not exceed "20%" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Validate Basel III compliance in large banking datasets -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @edge_case @large_files @performance
  Scenario Outline: Validate Basel III compliance in large banking datasets -- @1.1 
    Given a bank export file "bank_export_large_dataset_test.csv" with over "500,000" records ... undefined in 0.000s
    When I check the "Tier 1 Capital", "Risk-Weighted Assets", and "Liquidity Ratios" ... undefined in 0.000s
    Then all calculations should be performed efficiently within "10 minutes" ... undefined in 0.000s
    And any performance bottlenecks should be logged for optimization ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.basel_iii_capital_validation.Basel III Capital Validation" name="Validate Basel III compliance in large banking datasets -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @capital_requirements @edge_case @large_files @performance
  Scenario Outline: Validate Basel III compliance in large banking datasets -- @1.2 
    Given a bank export file "bank_export_large_dataset_test.xlsx" with over "1,000,000" records ... undefined in 0.000s
    When I check the "Tier 1 Capital", "Risk-Weighted Assets", and "Liquidity Ratios" ... undefined in 0.000s
    Then all calculations should be performed efficiently within "20 minutes" ... undefined in 0.000s
    And any performance bottlenecks should be logged for optimization ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>