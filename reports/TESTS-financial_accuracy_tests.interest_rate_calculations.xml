<testsuite name="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" tests="11" errors="0" failures="0" skipped="0" time="0.0" timestamp="2025-03-20T12:53:43.979244" hostname="Mac.localstaff"><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Validate correct interest calculations for loan payments -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @interest_rate @financial_accuracy
  Scenario Outline: Validate correct interest calculations for loan payments -- @1.1 
    Given a bank export file "bank_export_loans_test.csv" ... untested in 0.000s
    When I check the "Interest Rate" and "Principal Amount" columns in "N/A" ... undefined in 0.000s
    Then the calculated interest should match the expected formula "(P * r * t)/100" ... undefined in 0.000s
    And incorrect interest rates should be flagged ... undefined in 0.000s
    And deviations greater than "0.01%" should trigger a compliance alert ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Validate correct interest calculations for loan payments -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @interest_rate @financial_accuracy
  Scenario Outline: Validate correct interest calculations for loan payments -- @1.2 
    Given a bank export file "bank_export_home_mortgage.xlsx" ... untested in 0.000s
    When I check the "Interest Rate" and "Principal Amount" columns in "Sheet1" ... undefined in 0.000s
    Then the calculated interest should match the expected formula "Compound Interest" ... undefined in 0.000s
    And incorrect interest rates should be flagged ... undefined in 0.000s
    And deviations greater than "0.05%" should trigger a compliance alert ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Ensure correct interest rate format in exports -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @interest_rates @format_check
  Scenario Outline: Ensure correct interest rate format in exports -- @1.1 
    Given a bank export file "bank_export_baseline_test.csv" ... untested in 0.000s
    When I check the "Interest Rate" column in the "N/A" sheet ... undefined in 0.000s
    Then all interest rates should be formatted correctly as "X.XX%" ... undefined in 0.000s
    And interest rates should be expressed as a percentage with up to two decimal places ... undefined in 0.000s
    And values exceeding regulatory limits should be flagged ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Ensure correct interest rate format in exports -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @interest_rates @format_check
  Scenario Outline: Ensure correct interest rate format in exports -- @1.2 
    Given a bank export file "bank_export_baseline_test.xlsx" ... untested in 0.000s
    When I check the "Interest Rate" column in the "Sheet1" sheet ... undefined in 0.000s
    Then all interest rates should be formatted correctly as "X.XX%" ... undefined in 0.000s
    And interest rates should be expressed as a percentage with up to two decimal places ... undefined in 0.000s
    And values exceeding regulatory limits should be flagged ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Ensure correct interest rate format in exports -- @1.3 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @interest_rates @format_check
  Scenario Outline: Ensure correct interest rate format in exports -- @1.3 
    Given a bank export file "bank_export_high_interest_rates_test.csv" ... untested in 0.000s
    When I check the "Interest Rate" column in the "N/A" sheet ... undefined in 0.000s
    Then all interest rates should be formatted correctly as "X.XX%" ... undefined in 0.000s
    And interest rates should be expressed as a percentage with up to two decimal places ... undefined in 0.000s
    And values exceeding regulatory limits should be flagged ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Ensure correct interest rate format in exports -- @1.4 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @interest_rates @format_check
  Scenario Outline: Ensure correct interest rate format in exports -- @1.4 
    Given a bank export file "bank_export_high_interest_rates_test.xlsx" ... untested in 0.000s
    When I check the "Interest Rate" column in the "Sheet1" sheet ... undefined in 0.000s
    Then all interest rates should be formatted correctly as "X.XX%" ... undefined in 0.000s
    And interest rates should be expressed as a percentage with up to two decimal places ... undefined in 0.000s
    And values exceeding regulatory limits should be flagged ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Validate daily vs. monthly interest calculations -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @interest_calculation @edge_case
  Scenario Outline: Validate daily vs. monthly interest calculations -- @1.1 
    Given a bank export file "bank_export_interest_calculations_test.csv" ... untested in 0.000s
    When I compare "Daily Interest" and "Monthly Interest" calculations in the "N/A" sheet ... undefined in 0.000s
    Then calculated interest should match expected values based on "Principal * Rate / 365" ... undefined in 0.000s
    And rounding differences should not exceed "0.01" ... undefined in 0.000s
    And discrepancies beyond tolerance should be logged for review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Validate daily vs. monthly interest calculations -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @interest_calculation @edge_case
  Scenario Outline: Validate daily vs. monthly interest calculations -- @1.2 
    Given a bank export file "bank_export_interest_calculations_test.xlsx" ... untested in 0.000s
    When I compare "Daily Interest" and "Monthly Interest" calculations in the "Sheet1" sheet ... undefined in 0.000s
    Then calculated interest should match expected values based on "Principal * Rate / 12" ... undefined in 0.000s
    And rounding differences should not exceed "0.01" ... undefined in 0.000s
    And discrepancies beyond tolerance should be logged for review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Ensure correct compounding interest application -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @compounding_interest @loan_validation
  Scenario Outline: Ensure correct compounding interest application -- @1.1 
    Given a bank export file "bank_export_compound_interest_test.csv" ... untested in 0.000s
    When I check the "Compounded Interest" column in the "N/A" sheet ... undefined in 0.000s
    Then all values should match the calculated interest for "Daily" ... undefined in 0.000s
    And rounding rules should follow regulatory guidelines ... undefined in 0.000s
    And discrepancies should be flagged for review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Ensure correct compounding interest application -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @compounding_interest @loan_validation
  Scenario Outline: Ensure correct compounding interest application -- @1.2 
    Given a bank export file "bank_export_compound_interest_test.xlsx" ... untested in 0.000s
    When I check the "Compounded Interest" column in the "Sheet1" sheet ... undefined in 0.000s
    Then all values should match the calculated interest for "Monthly" ... undefined in 0.000s
    And rounding rules should follow regulatory guidelines ... undefined in 0.000s
    And discrepancies should be flagged for review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="financial_accuracy_tests.interest_rate_calculations.Interest Rate Calculations Validation" name="Ensure correct compounding interest application -- @1.3 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @financial_accuracy @compounding_interest @loan_validation
  Scenario Outline: Ensure correct compounding interest application -- @1.3 
    Given a bank export file "bank_export_compound_interest_test.xlsx" ... untested in 0.000s
    When I check the "Compounded Interest" column in the "Sheet2" sheet ... undefined in 0.000s
    Then all values should match the calculated interest for "Quarterly" ... undefined in 0.000s
    And rounding rules should follow regulatory guidelines ... undefined in 0.000s
    And discrepancies should be flagged for review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>