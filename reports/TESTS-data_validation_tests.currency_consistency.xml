<testsuite name="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" tests="19" errors="0" failures="0" skipped="0" time="0.0" timestamp="2025-03-20T10:51:23.033908" hostname="Mac.localstaff"><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Ensure currency codes are correctly recorded -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @data_quality @transaction_validation
  Scenario Outline: Ensure currency codes are correctly recorded -- @1.1 
    Given a bank export file "bank_export_currency_test.csv" ... untested in 0.000s
    When I check for currency codes in the "N/A" sheet ... undefined in 0.000s
    Then all transactions should have a valid ISO 4217 currency code ... undefined in 0.000s
    And currency codes should match the account’s assigned currency ... undefined in 0.000s
    And mismatches should be flagged with "High" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Ensure currency codes are correctly recorded -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @data_quality @transaction_validation
  Scenario Outline: Ensure currency codes are correctly recorded -- @1.2 
    Given a bank export file "bank_export_currency_test.xlsx" ... untested in 0.000s
    When I check for currency codes in the "Sheet1" sheet ... undefined in 0.000s
    Then all transactions should have a valid ISO 4217 currency code ... undefined in 0.000s
    And currency codes should match the account’s assigned currency ... undefined in 0.000s
    And mismatches should be flagged with "Medium" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Ensure negative values are correctly recorded -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @negative_values @debit_credit_validation
  Scenario Outline: Ensure negative values are correctly recorded -- @1.1 
    Given a bank export file "bank_export_baseline_test.csv" ... untested in 0.000s
    When I check for negative values in the "N/A" sheet ... undefined in 0.000s
    Then negative values should only be present in debit transactions ... undefined in 0.000s
    And credit transactions should not have negative values ... undefined in 0.000s
    And incorrect negative values should be flagged for review ... undefined in 0.000s
    And a correction suggestion should be provided ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Ensure negative values are correctly recorded -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @negative_values @debit_credit_validation
  Scenario Outline: Ensure negative values are correctly recorded -- @1.2 
    Given a bank export file "bank_export_baseline_test.xlsx" ... untested in 0.000s
    When I check for negative values in the "Sheet1" sheet ... undefined in 0.000s
    Then negative values should only be present in debit transactions ... undefined in 0.000s
    And credit transactions should not have negative values ... undefined in 0.000s
    And incorrect negative values should be flagged for review ... undefined in 0.000s
    And a correction suggestion should be provided ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Detect zero and negative transaction amounts -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @zero_amounts @edge_case
  Scenario Outline: Detect zero and negative transaction amounts -- @1.1 
    Given a bank export file "bank_export_negative_values_test.csv" ... untested in 0.000s
    When I check for negative and zero values in the "N/A" sheet ... undefined in 0.000s
    Then negative amounts should only exist for debit transactions ... undefined in 0.000s
    And zero amounts should be flagged as potential errors ... undefined in 0.000s
    And transactions with zero values should be logged for further review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Detect zero and negative transaction amounts -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @zero_amounts @edge_case
  Scenario Outline: Detect zero and negative transaction amounts -- @1.2 
    Given a bank export file "bank_export_negative_values_test.xlsx" ... untested in 0.000s
    When I check for negative and zero values in the "Sheet1" sheet ... undefined in 0.000s
    Then negative amounts should only exist for debit transactions ... undefined in 0.000s
    And zero amounts should be flagged as potential errors ... undefined in 0.000s
    And transactions with zero values should be logged for further review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Ensure negative values are correctly handled in currency conversions -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @exchange_rate_validation @data_consistency
  Scenario Outline: Ensure negative values are correctly handled in currency conversions -- @1.1 
    Given a bank export file "bank_export_currency_conversion_test.csv" ... untested in 0.000s
    When I check the "Amount" and "Exchange Rate" columns in the "N/A" sheet ... undefined in 0.000s
    Then converted values should maintain accurate negative value handling ... undefined in 0.000s
    And rounding should be consistent with financial regulations ... undefined in 0.000s
    And discrepancies should be logged for review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Ensure negative values are correctly handled in currency conversions -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @exchange_rate_validation @data_consistency
  Scenario Outline: Ensure negative values are correctly handled in currency conversions -- @1.2 
    Given a bank export file "bank_export_currency_conversion_test.xlsx" ... untested in 0.000s
    When I check the "Amount" and "Exchange Rate" columns in the "Sheet1" sheet ... undefined in 0.000s
    Then converted values should maintain accurate negative value handling ... undefined in 0.000s
    And rounding should be consistent with financial regulations ... undefined in 0.000s
    And discrepancies should be logged for review ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Ensure correct exchange rate usage for multi-currency transactions -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @multi_currency @exchange_rate_accuracy
  Scenario Outline: Ensure correct exchange rate usage for multi-currency transactions -- @1.1 
    Given a bank export file "transactions_forex_rates.csv" with multi-currency transactions ... undefined in 0.000s
    When the system calculates equivalent transaction amounts ... undefined in 0.000s
    Then exchange rates should match the reference data "official_exchange_rates.csv" ... undefined in 0.000s
    And mismatches beyond "0.5%" should be flagged as "High" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Ensure correct exchange rate usage for multi-currency transactions -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @multi_currency @exchange_rate_accuracy
  Scenario Outline: Ensure correct exchange rate usage for multi-currency transactions -- @1.2 
    Given a bank export file "transactions_forex_incorrect.xlsx" with multi-currency transactions ... undefined in 0.000s
    When the system calculates equivalent transaction amounts ... undefined in 0.000s
    Then exchange rates should match the reference data "outdated_rates.xlsx" ... undefined in 0.000s
    And mismatches beyond "1.0%" should be flagged as "Medium" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Validate negative values in large datasets -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @large_files @performance
  Scenario Outline: Validate negative values in large datasets -- @1.1 
    Given a bank export file "bank_export_large_file_negative_values.csv" ... untested in 0.000s
    When I check for negative values in a file with more than 100,000 rows ... undefined in 0.000s
    Then all negative values should be correctly identified ... undefined in 0.000s
    And system performance should be benchmarked for optimization ... undefined in 0.000s
    And a detailed report should be generated with flagged transactions ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Validate negative values in large datasets -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @large_files @performance
  Scenario Outline: Validate negative values in large datasets -- @1.2 
    Given a bank export file "bank_export_large_file_negative_values.xlsx" ... untested in 0.000s
    When I check for negative values in a file with more than 100,000 rows ... undefined in 0.000s
    Then all negative values should be correctly identified ... undefined in 0.000s
    And system performance should be benchmarked for optimization ... undefined in 0.000s
    And a detailed report should be generated with flagged transactions ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Detect suspicious negative values in high-risk transactions -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @high_risk @fraud_detection
  Scenario Outline: Detect suspicious negative values in high-risk transactions -- @1.1 
    Given a bank export file "bank_export_high_risk_negative_values.csv" ... untested in 0.000s
    When I check for negative values in the "N/A" sheet ... undefined in 0.000s
    Then high-risk transactions with excessive negative amounts should be flagged ... undefined in 0.000s
    And unusual negative values should trigger an alert for fraud analysis ... undefined in 0.000s
    And flagged transactions should be escalated for further investigation ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Detect suspicious negative values in high-risk transactions -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @high_risk @fraud_detection
  Scenario Outline: Detect suspicious negative values in high-risk transactions -- @1.2 
    Given a bank export file "bank_export_high_risk_negative_values.xlsx" ... untested in 0.000s
    When I check for negative values in the "Sheet1" sheet ... undefined in 0.000s
    Then high-risk transactions with excessive negative amounts should be flagged ... undefined in 0.000s
    And unusual negative values should trigger an alert for fraud analysis ... undefined in 0.000s
    And flagged transactions should be escalated for further investigation ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Assess system performance for currency consistency validation -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @performance_testing
  Scenario Outline: Assess system performance for currency consistency validation -- @1.1 
    Given a system processing "1000" bank export files per hour ... undefined in 0.000s
    When transactions have varying currencies and exchange rates ... undefined in 0.000s
    Then processing should complete within "600" seconds ... undefined in 0.000s
    And system resource usage should not exceed "75%" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Assess system performance for currency consistency validation -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @performance_testing
  Scenario Outline: Assess system performance for currency consistency validation -- @1.2 
    Given a system processing "5000" bank export files per hour ... undefined in 0.000s
    When transactions have varying currencies and exchange rates ... undefined in 0.000s
    Then processing should complete within "1200" seconds ... undefined in 0.000s
    And system resource usage should not exceed "85%" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Validate system behavior for schema mismatches due to currency inconsistencies -- @1.1 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @schema_validation
  Scenario Outline: Validate system behavior for schema mismatches due to currency inconsistencies -- @1.1 
    Given an export file "transactions_legacy.csv" with schema "Legacy Format" ... undefined in 0.000s
    When I check the schema validation rules ... undefined in 0.000s
    Then currency format mismatches should be flagged as "High" ... undefined in 0.000s
    And system logs should capture all schema-related discrepancies ... undefined in 0.000s
    And if possible, correction mappings should be suggested to match "Standard V1.2" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Validate system behavior for schema mismatches due to currency inconsistencies -- @1.2 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @schema_validation
  Scenario Outline: Validate system behavior for schema mismatches due to currency inconsistencies -- @1.2 
    Given an export file "transactions_modified.xlsx" with schema "Custom Schema" ... undefined in 0.000s
    When I check the schema validation rules ... undefined in 0.000s
    Then currency format mismatches should be flagged as "Medium" ... undefined in 0.000s
    And system logs should capture all schema-related discrepancies ... undefined in 0.000s
    And if possible, correction mappings should be suggested to match "Standard V1.3" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="data_validation_tests.currency_consistency.Validate Currency Consistency and Negative Values in Exported Bank Files" name="Validate system behavior for schema mismatches due to currency inconsistencies -- @1.3 " status="untested" time="0"><system-out>
<![CDATA[
@scenario.begin

  @currency_consistency @schema_validation
  Scenario Outline: Validate system behavior for schema mismatches due to currency inconsistencies -- @1.3 
    Given an export file "transactions_test.csv" with schema "Test Environment" ... undefined in 0.000s
    When I check the schema validation rules ... undefined in 0.000s
    Then currency format mismatches should be flagged as "Low" ... undefined in 0.000s
    And system logs should capture all schema-related discrepancies ... undefined in 0.000s
    And if possible, correction mappings should be suggested to match "Test Format V2.0" ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>